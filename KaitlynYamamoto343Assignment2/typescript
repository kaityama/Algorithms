Script started on Sun 28 Jan 2018 11:39:28 PM PST
kayama09@uw1-320-15:~/KaitlynYamamoto343Assignment2$ exitvalgrind ./a.outg++ bintree.h bintree.cpp nodedata.h NodeData.cpp driver.cpp[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cvalgrind ./a.out[Kg++ bintree.h bintree.cpp nodedata.h NodeData.cpp driver.cpp[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cvalgrind ./a.out[Kexit[K[Kexitvalgrind ./a.outg++ bintree.h bintree.cpp nodedata.h NodeData.cpp driver.cpp[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cvalgrind ./a.out[Kg++ bintree.h bintree.cpp nodedata.h NodeData.cpp driver.cpp[K[K[K[K[K[K[K[K[K[K[K lab2.cpp
kayama09@uw1-320-15:~/KaitlynYamamoto343Assignment2$ g++ bintree.h bintree.cpp nodedata.h NodeData.cpp lab2.cpp[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cexit[Kvalgrind ./a.out
==18353== Memcheck, a memory error detector
==18353== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18353== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==18353== Command: ./a.out
==18353== 
Initial data:
  iii not tttt eee r not and jj r eee pp r sssss eee not tttt ooo ff m m y z $$ 
Tree Inorder:
and eee ff iii jj m not ooo pp r sssss tttt y z 
                        z
                    y
                tttt
                        sssss
                    r
                        pp
                            ooo
            not
                    m
                jj
        iii
                ff
            eee
                and
Retrieve --> and:  found
Retrieve --> not:  found
Retrieve --> sss:  not found
Height    --> and:  1
Height    --> not:  5
Height    --> sss:  0
Height    --> tttt:  4
Height    --> ooo:  1
Height    --> y:  2
T == T2?     equal
T != first?  equal
T == dup?    equal
                    z
                y
                    tttt
            sssss
                    r
                pp
                    ooo
        not
                    m
                jj
                    iii
            ff
                    eee
                and
---------------------------------------------------------------
Initial data:
  b a c b a c $$ 
Tree Inorder:
a b c 
            c
        b
            a
Retrieve --> and:  not found
Retrieve --> not:  not found
Retrieve --> sss:  not found
Height    --> and:  0
Height    --> not:  0
Height    --> sss:  0
Height    --> tttt:  0
Height    --> ooo:  0
Height    --> y:  0
T == T2?     equal
T != first?  not equal
T == dup?    not equal
            c
        b
            a
---------------------------------------------------------------
Initial data:
  c b a $$ 
Tree Inorder:
a b c 
        c
            b
                a
Retrieve --> and:  not found
Retrieve --> not:  not found
Retrieve --> sss:  not found
Height    --> and:  0
Height    --> not:  0
Height    --> sss:  0
Height    --> tttt:  0
Height    --> ooo:  0
Height    --> y:  0
T == T2?     equal
T != first?  not equal
T == dup?    not equal
            c
        b
            a
---------------------------------------------------------------
Initial data:
   
==18353== 
==18353== HEAP SUMMARY:
==18353==     in use at exit: 84,992 bytes in 419 blocks
==18353==   total heap usage: 673 allocs, 254 frees, 100,872 bytes allocated
==18353== 
==18353== LEAK SUMMARY:
==18353==    definitely lost: 8,960 bytes in 300 blocks
==18353==    indirectly lost: 3,328 bytes in 118 blocks
==18353==      possibly lost: 0 bytes in 0 blocks
==18353==    still reachable: 72,704 bytes in 1 blocks
==18353==         suppressed: 0 bytes in 0 blocks
==18353== Rerun with --leak-check=full to see details of leaked memory
==18353== 
==18353== For counts of detected and suppressed errors, rerun with: -v
==18353== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
kayama09@uw1-320-15:~/KaitlynYamamoto343Assignment2$ exit
exit

Script done on Sun 28 Jan 2018 11:39:55 PM PST
